<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Board">

	<insert id="insertBoard" parameterType="boardVO" useGeneratedKeys="true">
		<selectKey keyProperty="boNo" resultType="int" order="BEFORE">
			select seq_board.nextval from dual
		</selectKey>
	
		insert into board
		(
			bo_no, bo_title, bo_content, bo_writer, bo_date
		)values(
			#{boNo}, #{boTitle}, #{boContent}, #{boWriter}, sysdate
		)
		
	</insert>

	<update id="incrementHit" parameterType="int">
		update board
		set
			bo_hit = bo_hit + 1
		where bo_no = #{boNo}
	</update>
	
	<select id="selectBoard" parameterType="int" resultType="boardVO">
		select
			bo_no, bo_title, bo_content, bo_writer, bo_date, bo_hit
		from board
		where bo_no = #{boNo}
	</select>	
	
	<update id="updateBoard" parameterType="boardVO">
		update board
		set
			bo_title = #{boTitle},
			bo_content = #{boContent},
			bo_date = sysdate
		where bo_no = #{boNo}
	</update>
	
	<delete id="deleteBoard" parameterType="int">
		delete from board
		where bo_no = #{boNo}
	</delete>
	
	<!-- 방법1(최신순 5개만 출력) -->
	<select id="selectBoardList_" resultType="boardVO">
		select *
		from (
		    select
				bo_no, bo_title, bo_date
		    from board
		    where 1=1
		    order by bo_no desc)
		where rownum between 1 and 5
	</select>
	
	<!-- 검색 조건 공통 쿼리문 -->
	<!-- where 1=1 뒤에 include tag 이용하여 넣어줄 수 있음 -->
	<sql id="boardSearch">
		<if test="searchType != null and searchType == 'title'">
			and ( bo_title like '%'||#{searchWord}||'%'	)
		</if>
		<if test="searchType != null and searchType == 'writer'">
			and ( bo_writer like '%'||#{searchWord}||'%' )
		</if>
	</sql>
	
	<select id="selectBoardCount" parameterType="paginationInfoVO" resultType="int">
		select count(bo_no)
		from board
		where 1=1
		<include refid="boardSearch" />
	</select>
	
	<!-- 방법2 : 페이징처리 List -->
	<select id="selectBoardList" parameterType="paginationInfoVO" resultType="boardVO">
	    select
			b.*
		from(
			select
		        a.*, row_number() over(order by a.bo_no desc) rnum
			from(
				select
		            bo_no, bo_title, bo_content, bo_writer, bo_date
		            from board
		            where 1=1
		            <include refid="boardSearch" />
		            order by bo_no desc
				)a
			)b
		    <![CDATA[
		    where b.rnum >= #{startRow} and b.rnum <= #{endRow}
		    ]]>
	</select>
	
</mapper>