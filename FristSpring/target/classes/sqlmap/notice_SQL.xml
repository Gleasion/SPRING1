<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Notice">
	
	<!-- 공지사항 등록 -->
	<insert id="insertNotice" parameterType="noticeVO" useGeneratedKeys="true">
		<selectKey keyProperty="noticeNo" resultType="int" order="BEFORE">
			select seq_notice.nextval from dual
		</selectKey>
		
		insert into notice
		    (notice_no, notice_title, notice_content, notice_writer, notice_date)
		values(
			#{noticeNo}, #{noticeTitle}, #{noticeContent}, #{noticeWriter}, sysdate
		)
	</insert>
	
	<!-- 조회수 증가 -->
	<update id="incresementNoticeHit" parameterType="int">
		update notice
		set
		    notice_hit = notice_hit + 1
		where
		    notice_no = #{noticeNo}
	</update>
	
	<!-- 공지사항 상세 조회 -->
	<select id="selectNotice" parameterType="int" resultType="noticeVO">
		select
			notice_no, notice_title, notice_content, notice_writer, notice_date, notice_hit
		from notice
		where notice_no = #{noticeNo}
	</select>
	
	<!-- 삭제 -->
	<delete id="deleteNotice" parameterType="int">
		delete from notice
		where notice_no = #{noticeNo}
	</delete>
	
	<!-- 수정 -->
	<update id="updateNotice" parameterType="noticeVO">
		update notice
		set
			notice_title = #{noticeTitle},
			notice_content = #{noticeContent},
			notice_date = sysdate,
			notice_hit = 1
		where notice_no = #{noticeNo}
	</update>
	
	<!-- 검색 -->
	<sql id="noticeSearch">
		<if test="searchType != null and searchType == 'title'">
			and ( notice_title like '%'||#{searchWord}||'%' )
		</if>
		<if test="searchType != null and searchType == 'writer'">
			and ( notice_writer like '%'||#{searchWord}||'%' )
		</if>
	</sql>
	
	<!-- 공지사항 목록 조회 -->
	<select id="selectNoticeList_" resultType="noticeVO">
		select *
		from (
		    select
		            notice_no, notice_title, notice_date
		    from notice
		    where 1=1
		    order by notice_no desc)
		where rownum between 1 and 5
	</select>
	
	<!-- 검색 기능 추가된 목록 조회 -->
	<select id="selectSearchNoticeList" parameterType="paginationInfoVO" resultType="noticeVO">
		select
			notice_no, notice_title, notice_content, notice_writer, notice_date, notice_hit
		from notice
		where 1=1
		<include refid="noticeSearch" />
		order by notice_no desc
	</select>
	
	<!-- count -->
	<select id="selectNoticeCount" parameterType="paginationInfoVO" resultType="int">
		select count(notice_no)
		from notice
		where 1=1
		<include refid="noticeSearch" />
	</select>
	
	<!-- 페이징처리 List -->
	<select id="selectNoticeList" parameterType="paginationInfoVO" resultType="noticeVO">
		select
			b.*
		from (
			select
				a.*, row_number() over(order by a.notice_no desc) rnum
			from (
				select
				notice_no, notice_title, notice_writer, notice_date, notice_hit
				from notice
				where 1=1
				<include refid="noticeSearch" />
				order by notice_no desc
			)a
		)b
		<![CDATA[
		where b.rnum >= #{startRow} and b.rnum <= #{endRow}
		]]>
	</select>
	
</mapper>